# 13_07_2021 python - (21)
# lambda 表达式
#作用：当无用时将自动删除，无数考虑内存占用
#python 写脚本时用lmabda可以省下函数定义的过程，更加精简
#有时函数只使用一两次，简化取名步骤
# 1_1 eg
# 原函数
def ds(x):
    return 2*x+1
#调用
print(ds(5))
#output 11


#lambda函数
g=lambda x:2*x+1
#      参数：表达式
#调用
print(g(5))

#lambda 当两个input variable
g=lambda x,y:x*y
#调用
print(g(5,6))
#output 30


#1_2  牛逼的BIF（built in function)
#1_2_1 filter function (过滤函数）:
#filter(function or None,iterable)
#当第一个参数为None时，将会过滤掉所有非True的值
#eg
g=list(filter(None,[1,0,False,True]))     #list为函数将其展开
print(g)
#output   [1, True]


#1_2_2 实际作用
#写一个筛选基数的过滤器 function

#先定义一个函数odd选出奇数
def odd(x):
    return x%2 #当为奇数时return 1 偶数return 0
#建立一个列表0-9
temp=range(10)
show=filter(odd,temp) #filter过滤掉所有得数为0（false的值）只保留得数为1（True）的值
print(list(show))
#output [1, 3, 5, 7, 9]

#1_2_3  提高
#以上的函数可以用lambda一行表达出来

g=list(filter(lambda x:x%2,range(10)))
print(g)
#output [1, 3, 5, 7, 9]

#1_3 另一个函数 map()
#map 函数将所有第二个input的值放入第一个input运行并返回
#eg
g=list(map(lambda x:x*2,range(10)))
print(g)
#output [0, 2, 4, 6, 8, 10, 12, 14, 16, 18]
# map 将0-9 的每个数都×2 并返回


#1_4_1 练习
def fun_A(x, y=3):
    return x * y
#lambda 表达式
g=lambda x,y:x*y
print(g(2,3))
#output 6


#1_4_2
lambda x : x if x % 2 else None
#普通function
def func(x):
    if x%2:
        return x
    else:
        return None
#1_4_3 用lambda and filter求所有100以内倍数
g=filter(lambda x:x%3==0,range(1,100))
print(list(g))
# 列表表达式
list1=[]
i=0
list=[ i for i in range(1, 100) if not(i%3)]
print(list)








